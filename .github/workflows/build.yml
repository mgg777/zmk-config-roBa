name: Build ZMK Firmware

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main

  # ↓ 追加ジョブで .config を保存する処理をオーバーライド
  build-with-config:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create build directory
        run: echo "build_dir=$(mktemp -d)" >> $GITHUB_ENV

      - name: West Init
        run: west init -l config

      - name: West Update
        run: west update --fetch-opt=--filter=tree:0

      - name: West Zephyr export
        run: west zephyr-export

      - name: West Build (force pristine)
        run: |
          west build -p always -s zmk/app -d "${{ env.build_dir }}" -b seeeduino_xiao_ble -- -DZMK_CONFIG=${{ github.workspace }}/config

      - name: Show Kconfig (.config content)
        run: |
          if [ -f "${{ env.build_dir }}/zephyr/.config" ]; then
            grep -v -e "^#" -e "^$" "${{ env.build_dir }}/zephyr/.config" | sort
          else
            echo "No Kconfig output"
          fi

      - name: Upload .config (try common paths)
        uses: actions/upload-artifact@v4
        with:
          name: config-output
          path: |
            ${{ env.build_dir }}/zephyr/.config
            ${{ env.build_dir }}/.config
            ${{ env.build_dir }}/zephyr/zephyr/.config
          if-no-files-found: warn

      - name: Rename firmware artifacts
        run: |
          mkdir "${{ env.build_dir }}/artifacts"
          if [ -f "${{ env.build_dir }}/zephyr/zmk.uf2" ]; then
            cp "${{ env.build_dir }}/zephyr/zmk.uf2" "${{ env.build_dir }}/artifacts/firmware.uf2"
          elif [ -f "${{ env.build_dir }}/zephyr/zmk.bin" ]; then
            cp "${{ env.build_dir }}/zephyr/zmk.bin" "${{ env.build_dir }}/artifacts/firmware.bin"
          fi

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: ${{ env.build_dir }}/artifacts
