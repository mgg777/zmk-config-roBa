#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <21 33>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R      &kp T                                                      &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F      &kp G        &kp LS(LG(S))             &kp MINUS           &kp H        &kp J  &kp K      &kp L    &lt 1 K_CALCULATOR
&kp Z      &kp X         &kp C         &kp V      &kp B        &kp ESCAPE                &kp DELETE          &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 TAB  &lt 2 SPACE  &mt LEFT_SHIFT SPACE      &lt 6 LEFT_CONTROL  &lt 3 ENTER                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                       &kp F6   &kp F7    &kp F8  &kp F9    &kp F10
&kp N1  &trans  &trans  &trans  &trans  &trans      &kp F11  &kp F12  &mkp MB1  &mo 5   &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans   &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                               &trans
            >;
        };

        NUM {
            bindings = <
&kp N1        &kp N2        &kp N3        &kp N4        &kp N5                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&none         &none         &none         &none         &none         &trans      &trans  &none   &none   &none   &none   &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &bt BT_CLR    &trans        &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &none     &kp LS(LC(TAB))         &kp UP_ARROW    &kp LC(TAB)              &none
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &none   &kp HOME  &kp LEFT                &kp DOWN_ARROW  &kp RIGHT                &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &none   &none     &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp RCTRL
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5   &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                         &kp CARET      &kp AMPERSAND     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RPAR
&trans    &trans  &trans    &trans      &trans       &trans      &kp MINUS  &kp EQUAL      &kp BACKSLASH     &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans    &trans  &trans    &trans      &trans       &trans      &none      &kp SEMICOLON  &kp SINGLE_QUOTE  &kp COMMA     &kp PERIOD            &kp SLASH
&trans    &trans  &trans    &trans      &trans       &trans      &trans     &trans                                                               &trans
            >;
        };
    };
};
